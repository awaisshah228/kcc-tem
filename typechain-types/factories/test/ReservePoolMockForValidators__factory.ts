/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ReservePoolMockForValidators,
  ReservePoolMockForValidatorsInterface,
} from "../../test/ReservePoolMockForValidators";

const _abi = [
  {
    inputs: [],
    name: "blockReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
    ],
    name: "setBlockReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawBlockReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610226806100206000396000f3fe6080604052600436106100385760003560e01c80630ac168a1146100445780631a18e7071461006b578063cf813c1d146100975761003f565b3661003f57005b600080fd5b34801561005057600080fd5b506100596100ac565b60408051918252519081900360200190f35b34801561007757600080fd5b506100956004803603602081101561008e57600080fd5b50356100b2565b005b3480156100a357600080fd5b506100596100b7565b60005481565b600055565b60006100c5336000546100cc565b5060005490565b80471015610121576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461016c576040519150601f19603f3d011682016040523d82523d6000602084013e610171565b606091505b50509050806101b15760405162461bcd60e51b815260040180806020018281038252603a8152602001806101b7603a913960400191505060405180910390fd5b50505056fe416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564a2646970667358221220ec2867568e24246c0cb6105adda8ad86271dd6b87bb58a3f97f4ae658d492c8464736f6c634300060c0033";

type ReservePoolMockForValidatorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReservePoolMockForValidatorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReservePoolMockForValidators__factory extends ContractFactory {
  constructor(...args: ReservePoolMockForValidatorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReservePoolMockForValidators> {
    return super.deploy(
      overrides || {}
    ) as Promise<ReservePoolMockForValidators>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReservePoolMockForValidators {
    return super.attach(address) as ReservePoolMockForValidators;
  }
  override connect(signer: Signer): ReservePoolMockForValidators__factory {
    return super.connect(signer) as ReservePoolMockForValidators__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReservePoolMockForValidatorsInterface {
    return new utils.Interface(_abi) as ReservePoolMockForValidatorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReservePoolMockForValidators {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReservePoolMockForValidators;
  }
}
